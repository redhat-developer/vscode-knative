{
  "name": "vscode-knative",
  "displayName": "Knative",
  "description": "Knative & Serverless Functions extension for VSCode",
  "version": "1.2.0",
  "license": "MIT",
  "publisher": "redhat",
  "preview": true,
  "repository": {
    "type": "git",
    "url": "https://github.com/redhat-developer/vscode-knative.git"
  },
  "bugs": "https://github.com/redhat-developer/vscode-knative/issues",
  "keywords": [
    "knative",
    "serverless",
    "functions",
    "eventing",
    "kn",
    "openshift",
    "kubernetes",
    "k8s",
    "redhat"
  ],
  "icon": "images/knative-logo.png",
  "engines": {
    "vscode": "^1.52.0"
  },
  "categories": [
    "Other"
  ],
  "main": "./out/src/extension",
  "scripts": {
    "build": "npm run clean && eslint . --ext .ts && npm run compile",
    "clean": "rm -rf out || rmdir out /s /q",
    "compile": "tsc -p ./",
    "coverage:upload": "codecov -f coverage/coverage-final.json",
    "lint": "eslint . --ext .ts",
    "lint:fix": "eslint . --ext .ts --fix",
    "pretest": "npm run clean && npm run compile && npm run lint && npm run verify && node ./out/build/install-vscode.js",
    "test": "node ./out/build/unit-tests.js",
    "ui-test": "npm run compile && extest setup-and-run out/test/ui-test/allTestsSuite.js -e ~/notTestFolder -i -o test/ui-test/custom-settings.json",
    "base-ui-test": "npm run compile && extest setup-and-run out/test/ui-test/baseTestsSuite.js -e ~/notTestFolder -i -o test/ui-test/custom-settings.json -c 1.69.2",
    "install-test": "npm run clean && npm run compile && node ./out/build/unit-tests.js",
    "update-deps": "node_modules/.bin/ncu --upgrade --loglevel verbose --packageFile package.json && npm update",
    "verify": "node ./out/build/verify-tools.js",
    "vscode:prepublish": "npm run compile",
    "watch": "tsc -watch -p ./"
  },
  "dependencies": {
    "@kubernetes/client-node": "^0.14.0",
    "@redhat-developer/vscode-redhat-telemetry": "^0.4.2",
    "@redhat-developer/vscode-wizard": "^0.2.30",
    "binary-search": "^1.3.6",
    "byline": "^5.0.0",
    "fs-extra": "^9.1.0",
    "git-fetch-pack": "^0.1.1",
    "git-transport-protocol": "^0.1.0",
    "glob": "^7.1.6",
    "globby": "^11.0.2",
    "got": "^11.8.5",
    "hasha": "^5.2.2",
    "js-yaml": "^3.14.1",
    "mkdirp": "^1.0.4",
    "mocha": "^9.2.2",
    "request": "^2.88.2",
    "request-progress": "^3.0.0",
    "rxjs": "^6.6.3",
    "semver": "^7.3.4",
    "shelljs": "^0.8.5",
    "string-format": "^2.0.0",
    "targz": "^1.0.1",
    "unzip-stream": "^0.3.1",
    "uuid": "^8.3.2",
    "validator": "^13.5.2",
    "vscode-kubernetes-tools-api": "1.3.0",
    "vscode-test": "^1.5.1",
    "yaml": "^1.10.0"
  },
  "devDependencies": {
    "@types/byline": "^4.2.32",
    "@types/chai": "^4.2.15",
    "@types/collections": "^5.1.0",
    "@types/fs-extra": "^9.0.7",
    "@types/glob": "^7.1.3",
    "@types/got": "^9.6.11",
    "@types/js-yaml": "^3.12.6",
    "@types/mkdirp": "^1.0.1",
    "@types/mocha": "^8.2.1",
    "@types/node": "^14.16.1",
    "@types/request": "^2.48.5",
    "@types/rewire": "^2.5.28",
    "@types/semver": "^7.3.4",
    "@types/shelljs": "^0.8.8",
    "@types/sinon": "^9.0.10",
    "@types/sinon-chai": "^3.2.5",
    "@types/string-format": "^2.0.0",
    "@types/tmp": "0.2.0",
    "@types/validator": "^13.1.3",
    "@types/vscode": "^1.52.0",
    "@typescript-eslint/eslint-plugin": "^4.15.1",
    "@typescript-eslint/parser": "^4.15.1",
    "chai": "^4.3.0",
    "codecov": "^3.8.1",
    "decache": "^4.6.0",
    "eslint": "^7.20.0",
    "eslint-config-airbnb-base": "^14.2.1",
    "eslint-config-prettier": "^7.2.0",
    "eslint-import-resolver-typescript": "^2.4.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-json": "^2.1.2",
    "eslint-plugin-prettier": "^3.3.1",
    "istanbul": "^0.4.5",
    "mocha-jenkins-reporter": "^0.4.5",
    "prettier": "^2.2.1",
    "proxyquire": "^2.1.3",
    "remap-istanbul": "^0.13.0",
    "rewire": "^5.0.0",
    "sinon": "^9.2.4",
    "sinon-chai": "^3.5.0",
    "source-map-support": "^0.5.19",
    "tmp": "0.2.1",
    "typescript": "4.1.5 - 4.1.9",
    "vscode-extension-tester": "^4.2.3",
    "walker": "^1.0.7"
  },
  "extensionDependencies": [
    "redhat.vscode-yaml"
  ],
  "activationEvents": [
    "onView:knativeServingProjectExplorer",
    "onView:knativeEventingProjectExplorer",
    "onView:knativeFunctionProjectExplorer",
    "onView:activeTaskFunction",
    "onCommand:eventing.explorer.refresh",
    "onCommand:eventing.explorer.openFile",
    "onCommand:knative.service.list",
    "onCommand:service.explorer.delete",
    "onCommand:service.explorer.create",
    "onCommand:service.explorer.edit",
    "onCommand:service.explorer.openFile",
    "onCommand:function.openInEditor",
    "onCommand:service.explorer.refresh",
    "onCommand:service.explorer.reportIssue",
    "onCommand:service.explorer.apply",
    "onCommand:service.explorer.deleteLocal",
    "onCommand:service.output",
    "onCommand:function.undeploy",
    "onCommand:function.invoke",
    "onCommand:function.OpenInBrowserAction",
    "onCommand:function.explorer.refresh",
    "onCommand:function.explorer.create",
    "onCommand:function.build",
    "onCommand:activeCommand.stop",
    "onCommand:activeCommand.focus",
    "onCommand:function.deploy",
    "onCommand:function.run",
    "onCommand:function.version",
    "onCommand:knative.version",
    "onCommand:function.run.enablement",
    "onCommand:function.addConfig.Palette",
    "onCommand:function.removeConfig.Palette",
    "onCommand:function.deploy.functionEnablement",
    "onCommand:function.build.FunctionEnablement",
    "onCommand:function.run.FunctionEnablement"
  ],
  "contributes": {
    "commands": [
      {
        "command": "function.explorer.refresh",
        "title": "Refresh View",
        "category": "Knative",
        "icon": "$(refresh)"
      },
      {
        "command": "eventing.explorer.refresh",
        "title": "Refresh View",
        "category": "Knative",
        "icon": "$(refresh)"
      },
      {
        "command": "function.version",
        "title": "Function version",
        "category": "Knative",
        "icon": {
          "dark": "images/context/versions-dark.svg",
          "light": "images/context/versions-light.svg"
        }
      },
      {
        "command": "knative.version",
        "title": "Knative version",
        "category": "Knative",
        "icon": {
          "dark": "images/context/versions-dark.svg",
          "light": "images/context/versions-light.svg"
        }
      },
      {
        "command": "activeCommand.stop",
        "title": "Stop",
        "icon": {
          "light": "images/stop-light.svg",
          "dark": "images/stop-dark.svg"
        }
      },
      {
        "command": "eventing.explorer.openFile",
        "title": "Describe",
        "category": "Knative"
      },
      {
        "command": "service.explorer.create",
        "title": "Add Service",
        "category": "Knative",
        "icon": "$(plus)"
      },
      {
        "command": "knative.service.open-in-browser",
        "title": "Open in Browser",
        "category": "Knative"
      },
      {
        "command": "service.explorer.delete",
        "title": "Delete",
        "category": "Knative"
      },
      {
        "command": "function.undeploy",
        "title": "Undeploy",
        "category": "Knative"
      },
      {
        "command": "function.OpenInBrowserAction",
        "title": "Open In Browser",
        "category": "Knative"
      },
      {
        "command": "service.explorer.deleteLocal",
        "title": "Delete the local copy of the YAML file",
        "category": "Knative"
      },
      {
        "command": "service.explorer.edit",
        "title": "Edit",
        "category": "Knative",
        "icon": "$(edit)"
      },
      {
        "command": "service.explorer.openFile",
        "title": "Describe",
        "category": "Knative"
      },
      {
        "command": "function.openInEditor",
        "title": "Open In Editor",
        "category": "Knative"
      },
      {
        "command": "activeCommand.focus",
        "title": "Focus",
        "category": "Knative"
      },
      {
        "command": "service.explorer.tag",
        "title": "Add a Tag",
        "category": "Knative"
      },
      {
        "command": "service.explorer.refresh",
        "title": "Refresh View",
        "category": "Knative",
        "icon": "$(refresh)"
      },
      {
        "command": "service.explorer.reportIssue",
        "title": "Report Extension Issue on GitHub",
        "category": "Knative",
        "icon": "$(issues)"
      },
      {
        "command": "service.explorer.apply",
        "title": "Apply YAML to cluster",
        "category": "Knative"
      },
      {
        "command": "service.output",
        "title": "Show Output Channel",
        "category": "Knative"
      },
      {
        "command": "function.explorer.create",
        "title": "Create Function",
        "category": "Knative",
        "icon": "$(plus)"
      },
      {
        "command": "function.invoke",
        "title": "Invoke",
        "category": "Knative"
      },
      {
        "command": "function.build",
        "title": "Build",
        "category": "Knative"
      },
      {
        "command": "function.deploy",
        "title": "Deploy",
        "category": "Knative"
      },
      {
        "command": "function.run",
        "title": "Run",
        "category": "Knative"
      },
      {
        "command": "function.run.enablement",
        "title": "Run",
        "category": "Knative",
        "enablement": "function:run"
      },
      {
        "command": "function.deploy.functionEnablement",
        "title": "Deploy",
        "category": "Knative",
        "enablement": "function:run"
      },
      {
        "command": "function.build.FunctionEnablement",
        "title": "Build",
        "category": "Knative",
        "enablement": "function:run"
      },
      {
        "command": "function.run.FunctionEnablement",
        "title": "Run",
        "category": "Knative",
        "enablement": "function:run"
      },
      {
        "command": "function.addEnv",
        "title": "Add Environment Variables",
        "category": "Knative"
      },
      {
        "command": "function.addVolume",
        "title": "Add Volumes",
        "category": "Knative"
      },
      {
        "command": "function.addConfig.Palette",
        "title": "Add Config to Function",
        "category": "Knative"
      },
      {
        "command": "function.removeEnv",
        "title": "Remove Environment Variables",
        "category": "Knative"
      },
      {
        "command": "function.removeVolume",
        "title": "Remove Volumes",
        "category": "Knative"
      },
      {
        "command": "function.removeConfig.Palette",
        "title": "Remove Config from Function",
        "category": "Knative"
      }
    ],
    "keybindings": [
      {
        "command": "service.explorer.refresh",
        "key": "alt+shift+r",
        "mac": "ctrl+shift+r"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "eventing.explorer.openFile",
          "when": "false"
        },
        {
          "command": "service.explorer.delete",
          "when": "false"
        },
        {
          "command": "function.undeploy",
          "when": "false"
        },
        {
          "command": "function.invoke",
          "when": "false"
        },
        {
          "command": "function.OpenInBrowserAction",
          "when": "false"
        },
        {
          "command": "function.build",
          "when": "false"
        },
        {
          "command": "function.deploy",
          "when": "false"
        },
        {
          "command": "function.run",
          "when": "false"
        },
        {
          "command": "function.run.enablement",
          "when": "false"
        },
        {
          "command": "function.deploy.functionEnablement",
          "when": "false"
        },
        {
          "command": "function.build.FunctionEnablement",
          "when": "false"
        },
        {
          "command": "function.run.FunctionEnablement",
          "when": "false"
        },
        {
          "command": "service.explorer.tag",
          "when": "false"
        },
        {
          "command": "knative.service.open-in-browser",
          "when": "false"
        },
        {
          "command": "service.explorer.edit",
          "when": "false"
        },
        {
          "command": "service.explorer.openFile",
          "when": "false"
        },
        {
          "command": "function.openInEditor",
          "when": "false"
        },
        {
          "command": "activeCommand.focus",
          "when": "false"
        },
        {
          "command": "service.explorer.deleteLocal",
          "when": "false"
        },
        {
          "command": "service.explorer.apply",
          "when": "false"
        },
        {
          "command": "function.addEnv",
          "when": "false"
        },
        {
          "command": "function.addVolume",
          "when": "false"
        },
        {
          "command": "function.removeEnv",
          "when": "false"
        },
        {
          "command": "function.removeVolume",
          "when": "false"
        }
      ],
      "view/item/context": [
        {
          "command": "service.explorer.edit",
          "when": "view == knativeServingProjectExplorer && viewItem == service",
          "group": "inline"
        },
        {
          "command": "activeCommand.stop",
          "when": "view == activeTaskFunction && viewItem == activecommand",
          "group": "inline@3"
        },
        {
          "command": "knative.service.open-in-browser",
          "when": "view == knativeServingProjectExplorer && viewItem == service || viewItem == revision_tagged",
          "group": "c0"
        },
        {
          "command": "service.explorer.apply",
          "when": "view == knativeServingProjectExplorer && viewItem == service_modified",
          "group": "c1"
        },
        {
          "command": "service.explorer.deleteLocal",
          "when": "view == knativeServingProjectExplorer && viewItem == service_modified",
          "group": "c1"
        },
        {
          "command": "service.explorer.delete",
          "when": "view == knativeServingProjectExplorer && viewItem == service || viewItem =~ /revision.*/g",
          "group": "c2"
        },
        {
          "command": "function.undeploy",
          "when": "view == knativeFunctionProjectExplorer && viewItem =~ /^(localDeployFunctions|deployFunctions)$/",
          "group": "c2"
        },
        {
          "command": "function.build",
          "when": "view == knativeFunctionProjectExplorer && viewItem =~ /^(localFunctions|localDeployFunctions|localFunctionsEnablement|notConnectedLocalFunctions|notConnectedLocalFunctionsEnablement)$/",
          "group": "c1@1"
        },
        {
          "command": "function.run",
          "when": "view == knativeFunctionProjectExplorer && viewItem =~ /^(localFunctions|localDeployFunctions|notConnectedLocalFunctions)$/",
          "group": "c1@2"
        },
        {
          "command": "function.run.enablement",
          "when": "view == knativeFunctionProjectExplorer && viewItem =~ /^(localFunctionsEnablement|notConnectedLocalFunctionsEnablement)$/",
          "group": "c1@2"
        },
        {
          "command": "function.deploy",
          "when": "view == knativeFunctionProjectExplorer && viewItem =~ /^(localFunctions|localDeployFunctions|localFunctionsEnablement)$/",
          "group": "c1@3"
        },
        {
          "command": "function.OpenInBrowserAction",
          "when": "view == knativeFunctionProjectExplorer && viewItem =~ /^(localDeployFunctions|deployFunctions)$/",
          "group": "c1@5"
        },
        {
          "command": "service.explorer.tag",
          "when": "view == knativeServingProjectExplorer && viewItem =~ /revision.*/g",
          "group": "c2"
        },
        {
          "command": "function.build.FunctionEnablement",
          "when": "view == knativeFunctionProjectExplorer && viewItem == functions",
          "group": "c1@1"
        },
        {
          "command": "function.run.FunctionEnablement",
          "when": "view == knativeFunctionProjectExplorer && viewItem == functions",
          "group": "c1@2"
        },
        {
          "command": "function.deploy.functionEnablement",
          "when": "view == knativeFunctionProjectExplorer && viewItem == functions",
          "group": "c1@3"
        },
        {
          "command": "function.invoke",
          "when": "view == knativeFunctionProjectExplorer && viewItem =~ /^(localDeployFunctions|localFunctions)$/",
          "group": "c1@4"
        },
        {
          "submenu": "function/addConfig",
          "when": "view == knativeFunctionProjectExplorer && viewItem =~ /^(localFunctions|localDeployFunctions|localFunctionsEnablement)$/",
          "group": "c1@6"
        },
        {
          "submenu": "function/removeConfig",
          "when": "view == knativeFunctionProjectExplorer && viewItem =~ /^(localFunctions|localDeployFunctions|localFunctionsEnablement)$/",
          "group": "c1@7"
        }
      ],
      "view/title": [
        {
          "command": "function.explorer.create",
          "when": "view == knativeFunctionProjectExplorer",
          "group": "navigation@1"
        },
        {
          "command": "function.explorer.refresh",
          "when": "view == knativeFunctionProjectExplorer",
          "group": "navigation@2"
        },
        {
          "command": "function.version",
          "when": "view == knativeFunctionProjectExplorer",
          "group": "navigation@3"
        },
        {
          "command": "eventing.explorer.refresh",
          "when": "view == knativeEventingProjectExplorer",
          "group": "navigation@1"
        },
        {
          "command": "service.explorer.create",
          "when": "view == knativeServingProjectExplorer",
          "group": "navigation@0"
        },
        {
          "command": "service.explorer.refresh",
          "when": "view == knativeServingProjectExplorer",
          "group": "navigation@1"
        },
        {
          "command": "service.explorer.reportIssue",
          "when": "view == knativeServingProjectExplorer",
          "group": "navigation@2"
        },
        {
          "command": "knative.version",
          "when": "view == knativeServingProjectExplorer",
          "group": "navigation@3"
        }
      ],
      "function/addConfig": [
        {
          "command": "function.addEnv",
          "when": "view == knativeFunctionProjectExplorer && viewItem =~ /^(localFunctions|localDeployFunctions|localFunctionsEnablement)$/"
        },
        {
          "command": "function.addVolume",
          "when": "view == knativeFunctionProjectExplorer && viewItem =~ /^(localFunctions|localDeployFunctions|localFunctionsEnablement)$/"
        }
      ],
      "function/removeConfig": [
        {
          "command": "function.removeEnv",
          "when": "view == knativeFunctionProjectExplorer && viewItem =~ /^(localFunctions|localDeployFunctions|localFunctionsEnablement)$/"
        },
        {
          "command": "function.removeVolume",
          "when": "view == knativeFunctionProjectExplorer && viewItem =~ /^(localFunctions|localDeployFunctions|localFunctionsEnablement)$/"
        }
      ]
    },
    "submenus": [
      {
        "id": "function/addConfig",
        "label": "Add Config"
      },
      {
        "id": "function/removeConfig",
        "label": "Remove Config"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "knative-explorer",
          "title": "Knative",
          "icon": "images/vscode-knative.svg"
        }
      ]
    },
    "views": {
      "knative-explorer": [
        {
          "id": "knativeFunctionProjectExplorer",
          "name": "Functions"
        },
        {
          "id": "knativeServingProjectExplorer",
          "name": "Serving"
        },
        {
          "id": "knativeEventingProjectExplorer",
          "name": "Eventing"
        },
        {
          "id": "activeTaskFunction",
          "name": "Function Sessions"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Knative",
      "properties": {
        "knative.disableCheckForDeletingLocal": {
          "title": "Disable check to delete",
          "type": "boolean",
          "default": true,
          "description": "Disable check to delete local files created when editing. This only Effects the check when Applying the local YAML."
        },
        "knative.outputVerbosityLevel": {
          "title": "Output Verbosity Level",
          "type": "number",
          "default": 0,
          "description": "Output verbosity level (value between 0 and 9) for Knative Create, Push and Watch commands in output channel and integrated terminal."
        },
        "knative.pollRefresh": {
          "title": "Turn on Poll Refresh",
          "type": "boolean",
          "default": false,
          "description": "Turn on the Polling of Refresh. This will call Refresh on the tree once a minute. \nRequires VSCode restart to take effect."
        },
        "knative.pollRefreshDelay": {
          "title": "Set Poll Refresh Delay",
          "type": "number",
          "default": 60,
          "description": "Set the Refresh polling delay in seconds. How often do you want it to check for an update? \nRequires VSCode restart to take effect."
        },
        "knative.showChannelOnOutput": {
          "title": "Show channel on output",
          "type": "boolean",
          "default": false,
          "description": "Show Knative output channel when new text added to output stream."
        },
        "vs-knative": {
          "type": "object",
          "description": "Knative configuration",
          "properties": {
            "vs-knative.outputFormat": {
              "enum": [
                "json",
                "yaml"
              ],
              "type": "string",
              "description": "Output format for Knative specs. One of 'json' or 'yaml' (default)."
            }
          },
          "default": {
            "vs-knative.outputFormat": "yaml"
          }
        }
      }
    }
  }
}
