apiVersion: client.knative.dev/v1alpha1
items:
  - apiVersion: sources.knative.dev/v1alpha1
    kind: ApiServerSource
    metadata:
      annotations:
        sources.knative.dev/creator: system:admin
        sources.knative.dev/lastModifier: system:admin
      creationTimestamp: '2021-01-14T00:26:33Z'
      generation: 1
      managedFields:
        - apiVersion: sources.knative.dev/v1beta1
          fieldsType: FieldsV1
          fieldsV1:
            f:status:
              f:conditions: {}
              f:observedGeneration: {}
              f:sinkUri: {}
          manager: controller
          operation: Update
          time: '2021-01-14T00:26:33Z'
        - apiVersion: sources.knative.dev/v1alpha2
          fieldsType: FieldsV1
          fieldsV1:
            f:spec:
              .: {}
              f:mode: {}
              f:resources: {}
              f:serviceAccountName: {}
              f:sink:
                .: {}
                f:ref:
                  .: {}
                  f:apiVersion: {}
                  f:kind: {}
                  f:name: {}
                  f:namespace: {}
            f:status:
              .: {}
              f:conditions: {}
              f:observedGeneration: {}
              f:sinkUri: {}
          manager: kn
          operation: Update
          time: '2021-01-14T00:26:33Z'
      name: example-source-apiserver0
      namespace: josh
      resourceVersion: '321574'
      selfLink: /apis/sources.knative.dev/v1alpha1/namespaces/josh/apiserversources/example-source-apiserver0
      uid: 8439660a-649f-409e-9c98-ee59de1474e8
    spec:
      mode: Ref
      resources:
        - apiVersion: v1
          controller: false
          controllerSelector:
            apiVersion: ''
            kind: ''
            name: ''
            uid: ''
          kind: Event
          labelSelector: {}
      serviceAccountName: default
      sink:
        ref:
          apiVersion: serving.knative.dev/v1
          kind: Service
          name: aaa
          namespace: josh
    status:
      conditions:
        - lastTransitionTime: '2021-01-14T00:26:33Z'
          status: Unknown
          type: Deployed
        - lastTransitionTime: '2021-01-14T00:26:33Z'
          message: User system:serviceaccount:josh:default cannot get, list, watch resource "events" in API group ""
          status: 'False'
          type: Ready
        - lastTransitionTime: '2021-01-14T00:26:33Z'
          status: 'True'
          type: SinkProvided
        - lastTransitionTime: '2021-01-14T00:26:33Z'
          message: User system:serviceaccount:josh:default cannot get, list, watch resource "events" in API group ""
          status: 'False'
          type: SufficientPermissions
      observedGeneration: 1
      sinkUri: http://aaa.josh.svc.cluster.local
  - apiVersion: sources.knative.dev/v1alpha1
    kind: ApiServerSource
    metadata:
      annotations:
        sources.knative.dev/creator: system:admin
        sources.knative.dev/lastModifier: system:admin
      creationTimestamp: '2021-01-14T00:26:33Z'
      generation: 1
      managedFields:
        - apiVersion: sources.knative.dev/v1alpha2
          fieldsType: FieldsV1
          fieldsV1:
            f:spec:
              .: {}
              f:mode: {}
              f:resources: {}
              f:serviceAccountName: {}
              f:sink:
                .: {}
                f:ref:
                  .: {}
                  f:apiVersion: {}
                  f:kind: {}
                  f:name: {}
                  f:namespace: {}
            f:status:
              .: {}
              f:conditions: {}
              f:observedGeneration: {}
              f:sinkUri: {}
          manager: kn
          operation: Update
          time: '2021-01-14T00:26:33Z'
        - apiVersion: sources.knative.dev/v1beta1
          fieldsType: FieldsV1
          fieldsV1:
            f:status:
              f:conditions: {}
              f:observedGeneration: {}
              f:sinkUri: {}
          manager: controller
          operation: Update
          time: '2021-01-14T00:26:34Z'
      name: example-source-apiserver1
      namespace: josh
      resourceVersion: '321586'
      selfLink: /apis/sources.knative.dev/v1alpha1/namespaces/josh/apiserversources/example-source-apiserver1
      uid: c6c2011f-048f-4797-bacc-77ac977bdb62
    spec:
      mode: Ref
      resources:
        - apiVersion: v1
          controller: false
          controllerSelector:
            apiVersion: ''
            kind: ''
            name: ''
            uid: ''
          kind: Event
          labelSelector: {}
      serviceAccountName: default
      sink:
        ref:
          apiVersion: eventing.knative.dev/v1beta1
          kind: Broker
          name: example-broker0
          namespace: josh
    status:
      conditions:
        - lastTransitionTime: '2021-01-14T00:26:34Z'
          status: Unknown
          type: Deployed
        - lastTransitionTime: '2021-01-14T00:26:34Z'
          message: User system:serviceaccount:josh:default cannot get, list, watch resource "events" in API group ""
          status: 'False'
          type: Ready
        - lastTransitionTime: '2021-01-14T00:26:34Z'
          status: 'True'
          type: SinkProvided
        - lastTransitionTime: '2021-01-14T00:26:34Z'
          message: User system:serviceaccount:josh:default cannot get, list, watch resource "events" in API group ""
          status: 'False'
          type: SufficientPermissions
      observedGeneration: 1
      sinkUri: http://broker-ingress.knative-eventing.svc.cluster.local/josh/example-broker0
  - apiVersion: sources.knative.dev/v1alpha1
    kind: ApiServerSource
    metadata:
      annotations:
        sources.knative.dev/creator: system:admin
        sources.knative.dev/lastModifier: system:admin
      creationTimestamp: '2021-01-14T00:26:34Z'
      generation: 1
      managedFields:
        - apiVersion: sources.knative.dev/v1beta1
          fieldsType: FieldsV1
          fieldsV1:
            f:status:
              f:conditions: {}
              f:observedGeneration: {}
              f:sinkUri: {}
          manager: controller
          operation: Update
          time: '2021-01-14T00:26:34Z'
        - apiVersion: sources.knative.dev/v1alpha2
          fieldsType: FieldsV1
          fieldsV1:
            f:spec:
              .: {}
              f:mode: {}
              f:resources: {}
              f:serviceAccountName: {}
              f:sink:
                .: {}
                f:ref:
                  .: {}
                  f:apiVersion: {}
                  f:kind: {}
                  f:name: {}
                  f:namespace: {}
            f:status:
              .: {}
              f:conditions: {}
              f:observedGeneration: {}
              f:sinkUri: {}
          manager: kn
          operation: Update
          time: '2021-01-14T00:26:34Z'
      name: example-source-apiserver2
      namespace: josh
      resourceVersion: '321605'
      selfLink: /apis/sources.knative.dev/v1alpha1/namespaces/josh/apiserversources/example-source-apiserver2
      uid: d1b82e72-a863-4f7c-9bb9-ff636d2feab6
    spec:
      mode: Ref
      resources:
        - apiVersion: v1
          controller: false
          controllerSelector:
            apiVersion: ''
            kind: ''
            name: ''
            uid: ''
          kind: Event
          labelSelector: {}
      serviceAccountName: default
      sink:
        ref:
          apiVersion: messaging.knative.dev/v1beta1
          kind: Channel
          name: example-channel0
          namespace: josh
    status:
      conditions:
        - lastTransitionTime: '2021-01-14T00:26:34Z'
          status: Unknown
          type: Deployed
        - lastTransitionTime: '2021-01-14T00:26:34Z'
          message: User system:serviceaccount:josh:default cannot get, list, watch resource "events" in API group ""
          status: 'False'
          type: Ready
        - lastTransitionTime: '2021-01-14T00:26:34Z'
          status: 'True'
          type: SinkProvided
        - lastTransitionTime: '2021-01-14T00:26:34Z'
          message: User system:serviceaccount:josh:default cannot get, list, watch resource "events" in API group ""
          status: 'False'
          type: SufficientPermissions
      observedGeneration: 1
      sinkUri: http://example-channel0-kn-channel.josh.svc.cluster.local
  - apiVersion: sources.knative.dev/v1alpha1
    kind: ApiServerSource
    metadata:
      annotations:
        sources.knative.dev/creator: system:admin
        sources.knative.dev/lastModifier: system:admin
      creationTimestamp: '2021-01-14T00:26:34Z'
      generation: 1
      managedFields:
        - apiVersion: sources.knative.dev/v1beta1
          fieldsType: FieldsV1
          fieldsV1:
            f:status:
              f:conditions: {}
              f:observedGeneration: {}
              f:sinkUri: {}
          manager: controller
          operation: Update
          time: '2021-01-14T00:26:34Z'
        - apiVersion: sources.knative.dev/v1alpha2
          fieldsType: FieldsV1
          fieldsV1:
            f:spec:
              .: {}
              f:mode: {}
              f:resources: {}
              f:serviceAccountName: {}
              f:sink:
                .: {}
                f:uri: {}
            f:status: {}
          manager: kn
          operation: Update
          time: '2021-01-14T00:26:34Z'
      name: example-source-apiserver3
      namespace: josh
      resourceVersion: '321607'
      selfLink: /apis/sources.knative.dev/v1alpha1/namespaces/josh/apiserversources/example-source-apiserver3
      uid: 5463a7fa-8c45-426e-ae74-e66d1c89747c
    spec:
      mode: Ref
      resources:
        - apiVersion: v1
          controller: false
          controllerSelector:
            apiVersion: ''
            kind: ''
            name: ''
            uid: ''
          kind: Event
          labelSelector: {}
      serviceAccountName: default
      sink:
        uri: https://event.receiver.uri
    status:
      conditions:
        - lastTransitionTime: '2021-01-14T00:26:34Z'
          status: Unknown
          type: Deployed
        - lastTransitionTime: '2021-01-14T00:26:34Z'
          message: User system:serviceaccount:josh:default cannot get, list, watch resource "events" in API group ""
          status: 'False'
          type: Ready
        - lastTransitionTime: '2021-01-14T00:26:34Z'
          status: 'True'
          type: SinkProvided
        - lastTransitionTime: '2021-01-14T00:26:34Z'
          message: User system:serviceaccount:josh:default cannot get, list, watch resource "events" in API group ""
          status: 'False'
          type: SufficientPermissions
      observedGeneration: 1
      sinkUri: https://event.receiver.uri
  - apiVersion: sources.knative.dev/v1alpha2
    kind: PingSource
    metadata:
      annotations:
        sources.knative.dev/creator: system:admin
        sources.knative.dev/lastModifier: system:admin
      creationTimestamp: '2021-01-14T00:26:36Z'
      generation: 1
      managedFields:
        - apiVersion: sources.knative.dev/v1alpha2
          fieldsType: FieldsV1
          fieldsV1:
            f:status:
              .: {}
              f:ceAttributes: {}
              f:conditions: {}
              f:observedGeneration: {}
              f:sinkUri: {}
          manager: controller
          operation: Update
          time: '2021-01-14T00:26:36Z'
        - apiVersion: sources.knative.dev/v1alpha2
          fieldsType: FieldsV1
          fieldsV1:
            f:spec:
              .: {}
              f:jsonData: {}
              f:schedule: {}
              f:sink:
                .: {}
                f:ref:
                  .: {}
                  f:apiVersion: {}
                  f:kind: {}
                  f:name: {}
                  f:namespace: {}
          manager: kn
          operation: Update
          time: '2021-01-14T00:26:36Z'
      name: example-source-ping0
      namespace: josh
      resourceVersion: '321795'
      selfLink: /apis/sources.knative.dev/v1alpha2/namespaces/josh/pingsources/example-source-ping0
      uid: 7cbf8634-96ec-4f45-a074-cb80dbd75b97
    spec:
      jsonData: '{ value: "hello" }'
      schedule: '*/2 * * * *'
      sink:
        ref:
          apiVersion: serving.knative.dev/v1
          kind: Service
          name: aaa
          namespace: josh
    status:
      ceAttributes:
        - source: /apis/v1/namespaces/josh/pingsources/example-source-ping0
          type: dev.knative.sources.ping
      conditions:
        - lastTransitionTime: '2021-01-14T00:26:36Z'
          message: Deployment does not have minimum availability.
          reason: MinimumReplicasUnavailable
          status: 'False'
          type: Deployed
        - lastTransitionTime: '2021-01-14T00:26:36Z'
          message: Deployment does not have minimum availability.
          reason: MinimumReplicasUnavailable
          status: 'False'
          type: Ready
        - lastTransitionTime: '2021-01-14T00:26:36Z'
          status: 'True'
          type: SinkProvided
        - lastTransitionTime: '2021-01-14T00:26:36Z'
          status: 'True'
          type: ValidSchedule
      observedGeneration: 1
      sinkUri: http://aaa.josh.svc.cluster.local
  - apiVersion: sources.knative.dev/v1alpha2
    kind: PingSource
    metadata:
      annotations:
        sources.knative.dev/creator: system:admin
        sources.knative.dev/lastModifier: system:admin
      creationTimestamp: '2021-01-14T00:26:36Z'
      generation: 1
      managedFields:
        - apiVersion: sources.knative.dev/v1alpha2
          fieldsType: FieldsV1
          fieldsV1:
            f:status:
              .: {}
              f:ceAttributes: {}
              f:conditions: {}
              f:observedGeneration: {}
              f:sinkUri: {}
          manager: controller
          operation: Update
          time: '2021-01-14T00:26:36Z'
        - apiVersion: sources.knative.dev/v1alpha2
          fieldsType: FieldsV1
          fieldsV1:
            f:spec:
              .: {}
              f:jsonData: {}
              f:schedule: {}
              f:sink:
                .: {}
                f:ref:
                  .: {}
                  f:apiVersion: {}
                  f:kind: {}
                  f:name: {}
                  f:namespace: {}
          manager: kn
          operation: Update
          time: '2021-01-14T00:26:36Z'
      name: example-source-ping1
      namespace: josh
      resourceVersion: '321824'
      selfLink: /apis/sources.knative.dev/v1alpha2/namespaces/josh/pingsources/example-source-ping1
      uid: 2bf15c41-32ab-4151-b5ad-8236c2000600
    spec:
      jsonData: '{ value: "hi service" }'
      schedule: '*/2 * * * *'
      sink:
        ref:
          apiVersion: serving.knative.dev/v1
          kind: Service
          name: aaa
          namespace: josh
    status:
      ceAttributes:
        - source: /apis/v1/namespaces/josh/pingsources/example-source-ping1
          type: dev.knative.sources.ping
      conditions:
        - lastTransitionTime: '2021-01-14T00:26:36Z'
          message: Deployment does not have minimum availability.
          reason: MinimumReplicasUnavailable
          status: 'False'
          type: Deployed
        - lastTransitionTime: '2021-01-14T00:26:36Z'
          message: Deployment does not have minimum availability.
          reason: MinimumReplicasUnavailable
          status: 'False'
          type: Ready
        - lastTransitionTime: '2021-01-14T00:26:36Z'
          status: 'True'
          type: SinkProvided
        - lastTransitionTime: '2021-01-14T00:26:36Z'
          status: 'True'
          type: ValidSchedule
      observedGeneration: 1
      sinkUri: http://aaa.josh.svc.cluster.local
  - apiVersion: sources.knative.dev/v1alpha2
    kind: PingSource
    metadata:
      annotations:
        sources.knative.dev/creator: system:admin
        sources.knative.dev/lastModifier: system:admin
      creationTimestamp: '2021-01-14T00:26:36Z'
      generation: 1
      managedFields:
        - apiVersion: sources.knative.dev/v1alpha2
          fieldsType: FieldsV1
          fieldsV1:
            f:status:
              .: {}
              f:ceAttributes: {}
              f:conditions: {}
              f:observedGeneration: {}
              f:sinkUri: {}
          manager: controller
          operation: Update
          time: '2021-01-14T00:26:36Z'
        - apiVersion: sources.knative.dev/v1alpha2
          fieldsType: FieldsV1
          fieldsV1:
            f:spec:
              .: {}
              f:jsonData: {}
              f:schedule: {}
              f:sink:
                .: {}
                f:ref:
                  .: {}
                  f:apiVersion: {}
                  f:kind: {}
                  f:name: {}
                  f:namespace: {}
          manager: kn
          operation: Update
          time: '2021-01-14T00:26:36Z'
      name: example-source-ping2
      namespace: josh
      resourceVersion: '321871'
      selfLink: /apis/sources.knative.dev/v1alpha2/namespaces/josh/pingsources/example-source-ping2
      uid: a9eefa61-a285-4bea-a3fe-09b6c7abdea0
    spec:
      jsonData: '{ value: "hi broker" }'
      schedule: '*/2 * * * *'
      sink:
        ref:
          apiVersion: eventing.knative.dev/v1beta1
          kind: Broker
          name: example-broker0
          namespace: josh
    status:
      ceAttributes:
        - source: /apis/v1/namespaces/josh/pingsources/example-source-ping2
          type: dev.knative.sources.ping
      conditions:
        - lastTransitionTime: '2021-01-14T00:26:36Z'
          message: Deployment does not have minimum availability.
          reason: MinimumReplicasUnavailable
          status: 'False'
          type: Deployed
        - lastTransitionTime: '2021-01-14T00:26:36Z'
          message: Deployment does not have minimum availability.
          reason: MinimumReplicasUnavailable
          status: 'False'
          type: Ready
        - lastTransitionTime: '2021-01-14T00:26:36Z'
          status: 'True'
          type: SinkProvided
        - lastTransitionTime: '2021-01-14T00:26:36Z'
          status: 'True'
          type: ValidSchedule
      observedGeneration: 1
      sinkUri: http://broker-ingress.knative-eventing.svc.cluster.local/josh/example-broker0
  - apiVersion: sources.knative.dev/v1alpha2
    kind: PingSource
    metadata:
      annotations:
        sources.knative.dev/creator: system:admin
        sources.knative.dev/lastModifier: system:admin
      creationTimestamp: '2021-01-14T00:26:37Z'
      generation: 1
      managedFields:
        - apiVersion: sources.knative.dev/v1alpha2
          fieldsType: FieldsV1
          fieldsV1:
            f:status:
              .: {}
              f:ceAttributes: {}
              f:conditions: {}
              f:observedGeneration: {}
              f:sinkUri: {}
          manager: controller
          operation: Update
          time: '2021-01-14T00:26:37Z'
        - apiVersion: sources.knative.dev/v1alpha2
          fieldsType: FieldsV1
          fieldsV1:
            f:spec:
              .: {}
              f:jsonData: {}
              f:schedule: {}
              f:sink:
                .: {}
                f:ref:
                  .: {}
                  f:apiVersion: {}
                  f:kind: {}
                  f:name: {}
                  f:namespace: {}
          manager: kn
          operation: Update
          time: '2021-01-14T00:26:37Z'
      name: example-source-ping3
      namespace: josh
      resourceVersion: '321913'
      selfLink: /apis/sources.knative.dev/v1alpha2/namespaces/josh/pingsources/example-source-ping3
      uid: 339b06bf-db77-4485-9c45-6075c53c92c1
    spec:
      jsonData: '{ value: "hi channel" }'
      schedule: '*/2 * * * *'
      sink:
        ref:
          apiVersion: messaging.knative.dev/v1beta1
          kind: Channel
          name: example-channel0
          namespace: josh
    status:
      ceAttributes:
        - source: /apis/v1/namespaces/josh/pingsources/example-source-ping3
          type: dev.knative.sources.ping
      conditions:
        - lastTransitionTime: '2021-01-14T00:26:37Z'
          message: Deployment does not have minimum availability.
          reason: MinimumReplicasUnavailable
          status: 'False'
          type: Deployed
        - lastTransitionTime: '2021-01-14T00:26:37Z'
          message: Deployment does not have minimum availability.
          reason: MinimumReplicasUnavailable
          status: 'False'
          type: Ready
        - lastTransitionTime: '2021-01-14T00:26:37Z'
          status: 'True'
          type: SinkProvided
        - lastTransitionTime: '2021-01-14T00:26:37Z'
          status: 'True'
          type: ValidSchedule
      observedGeneration: 1
      sinkUri: http://example-channel0-kn-channel.josh.svc.cluster.local
  - apiVersion: sources.knative.dev/v1alpha2
    kind: PingSource
    metadata:
      annotations:
        sources.knative.dev/creator: system:admin
        sources.knative.dev/lastModifier: system:admin
      creationTimestamp: '2021-01-14T00:26:37Z'
      generation: 1
      managedFields:
        - apiVersion: sources.knative.dev/v1alpha2
          fieldsType: FieldsV1
          fieldsV1:
            f:status:
              .: {}
              f:ceAttributes: {}
              f:conditions: {}
              f:observedGeneration: {}
              f:sinkUri: {}
          manager: controller
          operation: Update
          time: '2021-01-14T00:26:37Z'
        - apiVersion: sources.knative.dev/v1alpha2
          fieldsType: FieldsV1
          fieldsV1:
            f:spec:
              .: {}
              f:jsonData: {}
              f:schedule: {}
              f:sink:
                .: {}
                f:uri: {}
          manager: kn
          operation: Update
          time: '2021-01-14T00:26:37Z'
      name: example-source-ping4
      namespace: josh
      resourceVersion: '321946'
      selfLink: /apis/sources.knative.dev/v1alpha2/namespaces/josh/pingsources/example-source-ping4
      uid: 586d7bed-6b1c-474a-96f7-10b8d8e64103
    spec:
      jsonData: '{ value: "hi uri" }'
      schedule: '*/2 * * * *'
      sink:
        uri: https://event.receiver.uri
    status:
      ceAttributes:
        - source: /apis/v1/namespaces/josh/pingsources/example-source-ping4
          type: dev.knative.sources.ping
      conditions:
        - lastTransitionTime: '2021-01-14T00:26:37Z'
          message: Deployment does not have minimum availability.
          reason: MinimumReplicasUnavailable
          status: 'False'
          type: Deployed
        - lastTransitionTime: '2021-01-14T00:26:37Z'
          message: Deployment does not have minimum availability.
          reason: MinimumReplicasUnavailable
          status: 'False'
          type: Ready
        - lastTransitionTime: '2021-01-14T00:26:37Z'
          status: 'True'
          type: SinkProvided
        - lastTransitionTime: '2021-01-14T00:26:37Z'
          status: 'True'
          type: ValidSchedule
      observedGeneration: 1
      sinkUri: https://event.receiver.uri
  - apiVersion: sources.knative.dev/v1alpha1
    kind: SinkBinding
    metadata:
      annotations:
        sources.knative.dev/creator: system:admin
        sources.knative.dev/lastModifier: system:admin
      creationTimestamp: '2021-01-14T00:26:34Z'
      finalizers:
        - sinkbindings.sources.knative.dev
      generation: 1
      managedFields:
        - apiVersion: sources.knative.dev/v1alpha2
          fieldsType: FieldsV1
          fieldsV1:
            f:spec:
              .: {}
              f:sink:
                .: {}
                f:ref:
                  .: {}
                  f:apiVersion: {}
                  f:kind: {}
                  f:name: {}
                  f:namespace: {}
              f:subject:
                .: {}
                f:apiVersion: {}
                f:kind: {}
                f:name: {}
                f:namespace: {}
            f:status:
              .: {}
              f:observedGeneration: {}
              f:sinkUri: {}
          manager: kn
          operation: Update
          time: '2021-01-14T00:26:34Z'
        - apiVersion: sources.knative.dev/v1beta1
          fieldsType: FieldsV1
          fieldsV1:
            f:metadata:
              f:finalizers:
                .: {}
                v:"sinkbindings.sources.knative.dev": {}
            f:status:
              f:conditions: {}
              f:observedGeneration: {}
              f:sinkUri: {}
          manager: webhook
          operation: Update
          time: '2021-01-14T00:26:35Z'
      name: example-source-binding0
      namespace: josh
      resourceVersion: '891126'
      selfLink: /apis/sources.knative.dev/v1alpha1/namespaces/josh/sinkbindings/example-source-binding0
      uid: de6cdcf6-1e2e-48eb-8a10-ad1d3ec10a38
    spec:
      sink:
        ref:
          apiVersion: serving.knative.dev/v1
          kind: Service
          name: aaa
          namespace: josh
      subject:
        apiVersion: apps/v1
        kind: Deployment
        name: ddd
        namespace: josh
    status:
      conditions:
        - lastTransitionTime: '2021-01-14T01:15:23Z'
          status: 'True'
          type: Ready
      observedGeneration: 1
      sinkUri: http://aaa.josh.svc.cluster.local
  - apiVersion: sources.knative.dev/v1alpha1
    kind: SinkBinding
    metadata:
      annotations:
        sources.knative.dev/creator: system:admin
        sources.knative.dev/lastModifier: system:admin
      creationTimestamp: '2021-01-14T00:26:34Z'
      finalizers:
        - sinkbindings.sources.knative.dev
      generation: 1
      managedFields:
        - apiVersion: sources.knative.dev/v1alpha2
          fieldsType: FieldsV1
          fieldsV1:
            f:spec:
              .: {}
              f:sink:
                .: {}
                f:ref:
                  .: {}
                  f:apiVersion: {}
                  f:kind: {}
                  f:name: {}
                  f:namespace: {}
              f:subject:
                .: {}
                f:apiVersion: {}
                f:kind: {}
                f:name: {}
                f:namespace: {}
            f:status:
              .: {}
              f:sinkUri: {}
          manager: kn
          operation: Update
          time: '2021-01-14T00:26:34Z'
        - apiVersion: sources.knative.dev/v1beta1
          fieldsType: FieldsV1
          fieldsV1:
            f:metadata:
              f:finalizers:
                .: {}
                v:"sinkbindings.sources.knative.dev": {}
            f:status:
              f:conditions: {}
              f:observedGeneration: {}
              f:sinkUri: {}
          manager: webhook
          operation: Update
          time: '2021-01-14T00:26:36Z'
      name: example-source-binding1
      namespace: josh
      resourceVersion: '321763'
      selfLink: /apis/sources.knative.dev/v1alpha1/namespaces/josh/sinkbindings/example-source-binding1
      uid: e906ebd9-912c-4e94-a5b5-bf6bd3abfb8e
    spec:
      sink:
        ref:
          apiVersion: eventing.knative.dev/v1beta1
          kind: Broker
          name: example-broker0
          namespace: josh
      subject:
        apiVersion: apps/v1
        kind: Deployment
        name: ddd
        namespace: josh
    status:
      conditions:
        - lastTransitionTime: '2021-01-14T00:26:36Z'
          status: 'True'
          type: Ready
      observedGeneration: 1
      sinkUri: http://broker-ingress.knative-eventing.svc.cluster.local/josh/example-broker0
  - apiVersion: sources.knative.dev/v1alpha1
    kind: SinkBinding
    metadata:
      annotations:
        sources.knative.dev/creator: system:admin
        sources.knative.dev/lastModifier: system:admin
      creationTimestamp: '2021-01-14T00:26:35Z'
      finalizers:
        - sinkbindings.sources.knative.dev
      generation: 1
      managedFields:
        - apiVersion: sources.knative.dev/v1alpha2
          fieldsType: FieldsV1
          fieldsV1:
            f:spec:
              .: {}
              f:sink:
                .: {}
                f:ref:
                  .: {}
                  f:apiVersion: {}
                  f:kind: {}
                  f:name: {}
                  f:namespace: {}
              f:subject:
                .: {}
                f:apiVersion: {}
                f:kind: {}
                f:name: {}
                f:namespace: {}
            f:status: {}
          manager: kn
          operation: Update
          time: '2021-01-14T00:26:35Z'
        - apiVersion: sources.knative.dev/v1beta1
          fieldsType: FieldsV1
          fieldsV1:
            f:metadata:
              f:finalizers:
                .: {}
                v:"sinkbindings.sources.knative.dev": {}
            f:status:
              f:conditions: {}
              f:observedGeneration: {}
              f:sinkUri: {}
          manager: webhook
          operation: Update
          time: '2021-01-14T00:26:36Z'
      name: example-source-binding2
      namespace: josh
      resourceVersion: '321793'
      selfLink: /apis/sources.knative.dev/v1alpha1/namespaces/josh/sinkbindings/example-source-binding2
      uid: fee38c93-be91-4d93-8265-a269e81c328c
    spec:
      sink:
        ref:
          apiVersion: messaging.knative.dev/v1beta1
          kind: Channel
          name: example-channel0
          namespace: josh
      subject:
        apiVersion: apps/v1
        kind: Deployment
        name: ddd
        namespace: josh
    status:
      conditions:
        - lastTransitionTime: '2021-01-14T00:26:36Z'
          status: 'True'
          type: Ready
      observedGeneration: 1
      sinkUri: http://example-channel0-kn-channel.josh.svc.cluster.local
  - apiVersion: sources.knative.dev/v1alpha1
    kind: SinkBinding
    metadata:
      annotations:
        sources.knative.dev/creator: system:admin
        sources.knative.dev/lastModifier: system:admin
      creationTimestamp: '2021-01-14T00:26:35Z'
      finalizers:
        - sinkbindings.sources.knative.dev
      generation: 1
      managedFields:
        - apiVersion: sources.knative.dev/v1alpha2
          fieldsType: FieldsV1
          fieldsV1:
            f:spec:
              .: {}
              f:sink:
                .: {}
                f:uri: {}
              f:subject:
                .: {}
                f:apiVersion: {}
                f:kind: {}
                f:name: {}
                f:namespace: {}
            f:status:
              .: {}
              f:observedGeneration: {}
              f:sinkUri: {}
          manager: kn
          operation: Update
          time: '2021-01-14T00:26:35Z'
        - apiVersion: sources.knative.dev/v1beta1
          fieldsType: FieldsV1
          fieldsV1:
            f:metadata:
              f:finalizers:
                .: {}
                v:"sinkbindings.sources.knative.dev": {}
            f:status:
              f:conditions: {}
              f:observedGeneration: {}
              f:sinkUri: {}
          manager: webhook
          operation: Update
          time: '2021-01-14T00:26:36Z'
      name: example-source-binding3
      namespace: josh
      resourceVersion: '1316498'
      selfLink: /apis/sources.knative.dev/v1alpha1/namespaces/josh/sinkbindings/example-source-binding3
      uid: 59c60a79-87df-4c3c-bb57-c4c303e4fb1c
    spec:
      sink:
        uri: https://event.receiver.uri
      subject:
        apiVersion: apps/v1
        kind: Deployment
        name: ddd
        namespace: josh
    status:
      conditions:
        - lastTransitionTime: '2021-01-14T01:51:24Z'
          status: 'True'
          type: Ready
      observedGeneration: 1
      sinkUri: https://event.receiver.uri
kind: SourceList
